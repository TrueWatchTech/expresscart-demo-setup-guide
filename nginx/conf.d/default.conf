upstream loadbalancer {
  server expresscart:1111;
}

server {
  listen 8080;
  server_name expresscart;
  set $id "";
  set $name "";
  set $email "";
  location / {
    proxy_pass http://loadbalancer;
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header Connection "Keep-Alive";
    proxy_set_header Proxy-Connection "Keep-Alive";
    sub_filter '</head>' '<script src="https://static.guance.com/browser-sdk/v3/dataflux-rum.js" type="text/javascript"></script>
<script>
  window.DATAFLUX_RUM &&
    window.DATAFLUX_RUM.init({
      applicationId: "1",
      datakitOrigin: "http://localhost:9529",
      env: "prod",
      version: "1.0.0",
      service: "nginx",
      sessionSampleRate: 100,
      sessionReplaySampleRate: 100,
      trackInteractions: true,
      traceType: "ddtrace", // Not required, default to ddtrace. Currently, it supports 6 types: ddtrace, zipkin, skywalking_v3, jaeger, zipkin_single_header and w3c_traceparent.
      allowedTracingOrigins: ["http://localhost:8080",/https:\/\/.*\.my-api-domain\.com/],  // Not required; allow all requests to be injected into the header required by the trace collector. It can be the origin of the request or it can be regular.
    });
    window.DATAFLUX_RUM && window.DATAFLUX_RUM.startSessionReplayRecording();
    window.DATAFLUX_RUM && window.DATAFLUX_RUM.addRumGlobalContext("track_id","rtrace_b991271abae84862ba83a679094bff68");
    window.DATAFLUX_RUM && window.DATAFLUX_RUM.setUser({
    id: localStorage.getItem("userId"),
    name: "name",
    email: "email"});    
</script></head>';
    sub_filter_once on;
}
  }
